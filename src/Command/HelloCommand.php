<?php
/**
 * Created by PhpStorm.
 * User: arkhyliuk
 * Date: 10.10.18
 * Time: 18:03
 */

namespace App\Command;


use App\Service\Greeting;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class HelloCommand extends Command
{
    // за счет того что мы расширили класс Command в services.yaml autoconfigure: true
    // мы смогли создать контейнер для работы с консолью и собственно консольную команду
    // если в консоли набрать
    //  php bin/console debug:container 'App\Command\HelloCommand'
    /*
     Information for Service "App\Command\HelloCommand"
==================================================

 ---------------- --------------------------
  Option           Value
 ---------------- --------------------------
  Service ID       App\Command\HelloCommand
  Class            App\Command\HelloCommand
  Tags             console.command
  Public           no
  Synthetic        no
  Lazy             no
  Shared           yes
  Abstract         no
  Autowired        yes
  Autoconfigured   yes
 ---------------- --------------------------
     */
    // мы увидим Tags он присвоесля автоматически опять же за счет services.yaml autoconfigure: true
    // так вот когда симфони проверяет какие команды для командной строки есть она делает поиск по тегу
    //  php bin/console
    // в рузельтате увидим все команды и среди них, добавленную нами app:say-hello
    // теперь ее можно использовать
    //  php bin/console app:say-hello 'Andrii'
    /*
Hello from the app
==================

Hello Andrii
     */

    /**
     * @var Greeting
     */
    private $greeting;

    /**
     * HelloCommand constructor.
     * @param $greeting
     */
    public function __construct(Greeting $greeting)
    {
        $this->greeting = $greeting;

        parent::__construct();
    }

    protected function configure()
    {
        $this->setName('app:say-hello')
            ->setDescription('Say hello to the user')
            ->addArgument('name', InputArgument::REQUIRED);

//        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $name = $input->getArgument('name');
        $output->writeln(
            [
                'Hello from the app',
                '==================',
                '',
                $this->greeting->greet($name),
            ]
        );

//        $output->writeln($this->greeting->greet($name)); // второй вариант

//        parent::execute($input, $output); // TODO: Change the autogenerated stub
    }


}